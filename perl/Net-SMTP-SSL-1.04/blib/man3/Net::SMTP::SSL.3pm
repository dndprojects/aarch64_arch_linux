.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::SMTP::SSL 3"
.TH Net::SMTP::SSL 3 "2016-10-10" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::SMTP::SSL \- SSL support for Net::SMTP
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Net::SMTP::SSL;
\&  
\&  my $smtps = Net::SMTP::SSL\->new("example.com", Port => 465);
.Ve
.SH "DEPRECATED"
.IX Header "DEPRECATED"
\&\fBHey!  Read this!\fR
.PP
Since Net::SMTP v1.28 (2014\-10\-08), Net::SMTP itself has support for \s-1SMTP\s0 over
\&\s-1SSL,\s0 and also for \s-1STARTTLS.\s0  Use Net::SMTP, not Net::SMTP::SSL.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Implements the same \s-1API\s0 as Net::SMTP, but uses
IO::Socket::SSL for its network operations. Due to
the nature of \f(CW\*(C`Net::SMTP\*(C'\fR's \f(CW\*(C`new\*(C'\fR method, it is not overridden to make
use of a default port for the \s-1SMTPS\s0 service. Perhaps future versions
will be smart like that. Port \f(CW465\fR is usually what you want, and it's
not a pain to specify that.
.PP
For interface documentation, please see Net::SMTP.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Net::SMTP,
IO::Socket::SSL,
perl.
.SH "AUTHOR"
.IX Header "AUTHOR"
Casey West, <\fIcasey@geeknest.com\fR>.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
.Vb 3
\&  Copyright (c) 2004 Casey West.  All rights reserved.
\&  This module is free software; you can redistribute it and/or modify it
\&  under the same terms as Perl itself.
.Ve
